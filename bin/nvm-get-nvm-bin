#!/usr/bin/env bash
set -euo pipefail

#- nvm-get-nvm-bin 1.0
## Usage: nvm-get-nvm-bin
## Print the NVM_DIR environment variables as it would be set after enabling 'nvm'.
## NOTE: requires the presence of a '.nvmrc' file.
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
[[ $# -eq 0 ]] || sh_script_usage

command -v nvm >/dev/null 2>&1 || {
    # using a less exact call because 'brew --prefix nvm' is very very slow
    # BREW_NVM_DIR=$(brew --prefix nvm 2>/dev/null || true)
    BREW_NVM_DIR=$(brew --prefix)/opt/nvm
    NVM_SH=
    [[ ! -f ${HOME}/.nvm/nvm.sh ]] || NVM_SH=${HOME}/.nvm/nvm.sh
    [[ ! -f ${XDG_CONFIG_HOME:-}/nvm/nvm.sh ]] || NVM_SH=${XDG_CONFIG_HOME}/nvm/nvm.sh
    [[ ! -f ${BREW_NVM_DIR}/nvm.sh ]] || NVM_SH=${BREW_NVM_DIR}/nvm.sh

    [[ -n ${NVM_SH} ]] || {
        echo >&2 "[WARN] Couldn't find nvm in any of the known locations."
        exit 0
    }
    NOUNSET_STATE="$(set +o | grep nounset)"
    set +u
    source ${NVM_SH} --no-use
    eval "${NOUNSET_STATE}"
    unset NOUNSET_STATE
}

NOUNSET_STATE="$(set +o | grep nounset)"
set +u
nvm use >/dev/null 2>&1 || true
eval "${NOUNSET_STATE}"
unset NOUNSET_STATE

echo ${NVM_BIN:-}
